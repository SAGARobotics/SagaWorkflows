on:
  workflow_call:

    inputs:
      runs-on:
        type: string
        description: |
          Stringified list for choosing GitHub runners. The default is using the self-hosted 
          buildfarm. For public repositories, the public hosted runners (for example ubuntu-latest)
          must be used.
          Example value: '["ubuntu-latest"]'
        default: '["self-hosted", "buildfarm"]'
        required: false

      release-type:
        type: string
        description: |
          The type of release we want the workflow to produce. Valid options are 'internal',
          'external' or 'public'. Beware that using the 'external' or 'public' releases will
          make your package available outside the organization, but it will **not release its
          dependencies**. So, make sure the dependencies are available in the same release.
        default: internal
        required: false

      packages:
        type: string
        description: |
          Stringified list of the pacakges you want to release with this workflow. If this 
          parameter isn't provided, the default behaviour will be to run the workflow for
          all the packages in the repository.
          Example value: '["my_ros_package", "another_ros_package"]'
        default: '[]'
        required: false
  
      distribution:
        type: string
        description: |
          The ROS distribution which the workflow will use for building/testing
          the package(s).
        default: 'noetic'
        required: false

      build-with-autonomy:
        type: boolean
        description: |
          Control whether or not to build the pacakge with the ThorvaldAutonomy repository.
          Building with the ThorvaldAutonomy repo will place any declared dependencies that
          can be found in it, into the buildspace with your package/packages.
        default: true
        required: false

      saga-action-ref:
        type: string
        description: |
          The reference to which version of SagaActions you want to run.
        default: 'main'
        required: false

      release:
        type: boolean
        description: |
          Control input for releasing the repo.
        default: false
        required: false

    secrets:
      pat-token:
        description: |
          Personal access token with at least read privileges for all
          repositories in the organization.
        required: true
      repo-user:
        description: Username with read/write privileges to Saga's repository.
        required: true
      repo-pass:
        description: Password for the provided user.
        required: true

env:
  CATKIN_WS_SRC: catkin_ws/src

jobs:
  prepare-jobs:
    runs-on: ${{ fromJson(inputs.runs-on) }}
    name: Create job parameters

    outputs:
      matrix: ${{ steps.workspace_dependencies.outputs.package-list }}

    steps:
      - name: Checkout SagaActions
        uses: actions/checkout@v3
        with:
          repository: SAGARobotics/SagaActions
          token: ${{ secrets.pat-token }}
          path: .github/SagaActions
          ref: v2.7
      - name: Checkout ${{ github.event.repository.name }}
        uses: actions/checkout@v3
        with:
          repository: SAGARobotics/${{ github.event.repository.name }}
          token: ${{ secrets.pat-token }}
          submodules: recursive
          path: repository

      - name: Conform
        id: ros_conform
        uses: ./.github/SagaActions/ros_conform
      - name: Workspace Dependencies
        id: workspace_dependencies
        uses: ./.github/SagaActions/workspace_dependencies
        with:
          packages: ${{ inputs.packages }}

  checks:
    runs-on: ${{ fromJson(inputs.runs-on) }}
    needs: prepare-jobs
    name: Checks

    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.prepare-jobs.outputs.matrix) }}

    steps:
      - name: Checkout SagaActions
        uses: actions/checkout@v3
        with:
          repository: SAGARobotics/SagaActions
          token: ${{ secrets.pat-token }}
          path: .github/SagaActions
          ref: v2.7

      - name: Create package workspace
        id: catkin_workspace
        uses: ./.github/SagaActions/create_workspace
        with:
          repository: ${{ github.event.repository.name }}
          pat-token: ${{ secrets.pat-token }}
          package: ${{ matrix.package }}
          catkinws-src: $CATKIN_WS_SRC

      - name: Preform pre-release checks
        uses: ./.github/SagaActions/checks
        with:
          package: ${{ matrix.package }}
          catkinws-src: $CATKIN_WS_SRC
          release-type: ${{ inputs.release-type }}

  test:
    runs-on: ${{ fromJson(inputs.runs-on) }}
    needs: prepare-jobs
    name: Integration tests

    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.prepare-jobs.outputs.matrix) }}

    steps:
      - name: Checkout SagaActions
        uses: actions/checkout@v3
        with:
          repository: SAGARobotics/SagaActions
          token: ${{ secrets.pat-token }}
          path: .github/SagaActions
          ref: v2.7

      - name: Create package workspace
        id: catkin_workspace
        uses: ./.github/SagaActions/create_workspace
        with:
          repository: ${{ github.event.repository.name }}
          pat-token: ${{ secrets.pat-token }}
          package: ${{ matrix.package }}
          catkinws-src: $CATKIN_WS_SRC

      - name: Run ROS tests
        id: ros_tests
        uses: ./.github/SagaActions/testing/ros_tests
        with:
          rosdistro: ${{ inputs.distribution }}
          package: ${{ matrix.package }}
          catkinws-src: $CATKIN_WS_SRC
          release-type: ${{ inputs.release-type }}
          repo-user: ${{ secrets.repo-user }}
          repo-pass: ${{ secrets.repo-pass }}

  build:
    runs-on: ${{ fromJson(inputs.runs-on) }}
    needs: [prepare-jobs, test, checks]
    name: Build

    strategy:
      matrix:
        package: ${{ fromJson(needs.prepare-jobs.outputs.matrix) }}

    steps:
      - name: Checkout SagaActions
        uses: actions/checkout@v3
        with:
          repository: SAGARobotics/SagaActions
          token: ${{ secrets.pat-token }}
          path: .github/SagaActions
          ref: v2.7

      - name: Create package workspace
        id: catkin_workspace
        uses: ./.github/SagaActions/create_workspace
        with:
          repository: ${{ github.event.repository.name }}
          pat-token: ${{ secrets.pat-token }}
          package: ${{ matrix.package }}
          catkinws-src: $CATKIN_WS_SRC

      - name: Build ${{ matrix.package }}
        id: build
        uses: ./.github/SagaActions/build
        with:
          rosdistro: ${{ inputs.distribution }}
          package: ${{ matrix.package }}
          catkinws-src: $CATKIN_WS_SRC
          build-order: ${{ steps.catkin_workspace.outputs.package-list }}
          release-type: ${{ inputs.release-type }}
          repo-user: ${{ secrets.repo-user }}
          repo-pass: ${{ secrets.repo-pass }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.package }}-${{ inputs.distribution }}-artifact
          path: ${{ steps.build.outputs.package_path }}
          if-no-files-found: error
          retention-days: 1

  build-status:
    if: ${{ always() }}
    needs: [build]
    runs-on: ${{ fromJson(inputs.runs-on) }}
    name: Build Status

    steps:
      - name: Status for matrix build jobs
        run: |
          failed=$(curl -X GET -s -u "sagarobotics-cicd:${{ secrets.pat-token }}" \
                    https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs | \
                    jq -c 'any (.jobs[]; .conclusion == "failure")')
          if [[ "$failed" == "true" ]];
          then
            exit 1;
          else
            exit 0
          fi
        shell: bash
