on:
  workflow_call:
    inputs:
      ros-distributions:
        description: |
          Stringified list of ROS distributions the package(s) will be built for
        required: true
        default: melodic
        type: string
      packages:
        description: |
          Stringified list of ROS packages that this workflow will run for. Default
          behavior will release all packages in the repo, or, if the repository contains
          a single package, release the one package that the repository contains.
          If a list is provided, only the packages defined in the list will be built.
        required: false
        default: 'release-all'
        type: string
      runs-on:
        description: |
          List of which runners the workflow should use.
        default: '["self-hosted", "buildfarm"]'
        required: false
        type: string

      release-type:
        description: |
          Variable controlling where the produced package is released. Valid 
          values are "dev" (default) and "prod"
        default: 'dev'
        required: false
        type: string

    secrets:
      pat-token:
        required: true
      dev-apt-read-user:
        required: true
      dev-apt-read-write-user:
        required: true

jobs:
  create-matrix:
    runs-on: ${{ fromJson(inputs.runs-on) }}
    name: Prepare Job matrix
    outputs:
      matrix: ${{ steps.create-matrix.outputs.matrix }}
    steps:
      - name:  Checkout ${{ github.event.repository.name }}
        uses: actions/checkout@v2
        with:
          repository: SAGARobotics/${{ github.event.repository.name }}
          token: ${{ secrets.pat-token }}
      - name: Checkout SagaActions
        uses: actions/checkout@v2
        with:
          repository: SAGARobotics/SagaActions
          token: ${{ secrets.pat-token }}
          path: .github/SagaActions
      - name: Create matrix
        id: create-matrix
        uses: ./.github/SagaActions/create-matrix
        with: 
          pat-token: ${{ secrets.pat-token }}
          ros-distributions: ${{ inputs.ros-distributions }}
          packages: ${{ inputs.packages }}

  testing_actions:
    needs: create-matrix
    runs-on: ${{ fromJson(inputs.runs-on) }}
    name: Testing Actions

    strategy:
      matrix: ${{ fromJson(needs.create-matrix.outputs.matrix) }}

    steps:
      - name: Checkout ${{ github.event.repository.name }}
        uses: actions/checkout@v2
        with:
          repository: SAGARobotics/${{ github.event.repository.name }}
          token: ${{ secrets.pat-token }}
      - name: Checkout SagaActions
        uses: actions/checkout@v2
        with:
          repository: SAGARobotics/SagaActions
          token: ${{ secrets.pat-token }}
          path: .github/SagaActions

      - name: ACTION UNDER TEST
        uses: ./.github/SagaActions/docker_base
        with: 
          ros-distribution: ${{ matrix.ros-distro }}
          repo-name: ${{ github.event.repository.name }}
          packages: ${{ inputs.packages }}
          require-rasberry: 'true'
          saga-dockerimage-username: ${{ secrets.SAGA_REPO_READ_USER }}
          saga-dockerimage-password: ${{ secrets.SAGA_REPO_READ_PASS }}
          saga-deb-user: ${{ secrets.APT_READ_USER }}
          pat-token: ${{ secrets.SERVICE_ACCOUNT_PAT_REPO_READ }}
