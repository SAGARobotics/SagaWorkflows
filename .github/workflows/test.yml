on:
  workflow_call:

    inputs:
    # GENERAL
      runs-on:
        type: string
        description: |
          Stringified list for choosing github runners. The default is using the 
          self-hosted buildfarm, but for public repositories the public-hosted 
          runners must be used (for example ubuntu-latest).
        default: '["self-hosted", "buildfarm"]'
        required: false
      release-type:
        type: string
        description: |
          The release type that this workflow should run for. Valid options are
          'internal', 'external' or 'public'. Beware that using the 'external' 
          or 'public' option will make your program available to others than 
          SagaRobotics. 
          The workflow's dependencies will also be sourced based on this 
          parameter.
        default: internal
        required: false
      packages:
        type: string
        description: |
          Stringified list of the packages that shall be used in the workflow. 
          If not provided, the default behavior is to use all packages. 
          N.B. If you include the default empty string in the list, all packages 
          will be included in the workflow. 
        default: '[]'
        required: false

    # BUILD
      distribution:
        type: string
        description: |
          The ROS distribution which the workflow will use for building/testing
          the package(s).
        default: 'melodic'
        required: false
    
    # TEST (TBD)

    secrets:
      pat-token:
        description: |
          Personal access token with at least read privileges for all 
          repositories in the organization.
        required: true
      repo-user:
        description: Username with read/write privileges to Saga's repository.
        required: true
      repo-pass:
        description: Password for the provided user.
        required: true

jobs:
  prepare-jobs:
    runs-on: ${{ fromJson(inputs.runs-on) }}
    name: Create job parameters
    outputs:
      matrix: ${{ steps.package.outputs.package-list }}
    steps:
      - name: Checkout ${{ github.event.repository.name }}
        uses: actions/checkout@v3
        with:
          repository: SAGARobotics/${{ github.event.repository.name }}
          token: ${{ secrets.pat-token }}
      - name: Checkout SagaActions
        uses: actions/checkout@v3
        with:
          repository: SAGARobotics/SagaActions
          token: ${{ secrets.pat-token }}
          path: .github/SagaActions
          ref: optim

      - name: Conform
        id: ros_conform
        uses: ./.github/SagaActions/beta/ros_conform

      - name: Package List
        id: package
        uses: ./.github/SagaActions/beta/package
        with:
          packages: ${{ inputs.packages }}

      - name: Check Output
        run: |
          echo ${{ steps.package.outputs.package-list }}
          ls -1
        shell: bash

  integration-test:
    runs-on: ${{ fromJson(inputs.runs-on) }}
    needs: prepare-jobs
    name: Integration tests

    strategy:
      matrix: 
        package: ${{ fromJson(needs.prepare-jobs.outputs.matrix) }}

    steps:
      # - name: Checkout ${{ github.event.repository.name }}
      #   uses: actions/checkout@v3
      #   with:
      #     repository: SAGARobotics/${{ github.event.repository.name }}
      #     token: ${{ secrets.pat-token }}
      - name: Checkout SagaActions
        uses: actions/checkout@v3
        with:
          repository: SAGARobotics/SagaActions
          token: ${{ secrets.pat-token }}
          path: .github/SagaActions
          ref: optim

      # - name: Conform
      #   id: ros_conform
      #   uses: ./.github/SagaActions/beta/ros_conform

      - name: Create package workspace
        uses: ./.github/SagaActions/beta/create_workspace
        with:
          repository: ${{ github.event.repository.name }}
          pat-token: ${{ secrets.pat-token }}
          package: ${{ matrix.package }}

      # - name: Run ROS tests
      #   id: ros_tests
      #   uses: ./.github/SagaActions/beta/testing/ros_tests
      #   with:
      #     rosdistro: ${{ inputs.distribution }}
      #     package: ${{ strategy.matrix.package }}
      #     release-type: ${{ inputs.release-type }}
      #     repo-user: ${{ secrets.repo-user }}
      #     repo-pass: ${{ secrets.repo-pass }}
      # - name: Run Build test
      #   id: build
      #   uses: ./.github/SagaActions/beta/build
      #   with:
      #     rosdistro: ${{ inputs.distribution }}
      #     packages: ${{ inputs.packages }}
      #     release-type: ${{ inputs.release-type }}
      #     repo-user: ${{ secrets.repo-user }}
      #     repo-pass: ${{ secrets.repo-pass }}

      # - name: Check Output
      #   run: |
      #     echo ${{ steps.package.outputs.package-list }}
      #     ls -1
      #   shell: bash
